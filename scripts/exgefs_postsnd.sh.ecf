#!/bin/ksh
################################################################
# Script Name:      exgfs_postsnd.sh.sms
# Script Description:   Generate GFS BUFR sounding files
# Script History Log:
#   1) 2003-03-25       Hualu Pan       First Implementation
#   2) 2010-05-25       V. Krishna Kumar Modified for the GFS 
#                                  resolution upgrade
#   3) 2014-08-01       D. Carlis Updated to vertical structure 
#                                 and T1534 Resolution 
#   4) 2016-11-01       H. Chuang Update to read new model nems output
#   5) 2017-02-21       Guang Ping Lou setup mpmd to speedup the run
#                                 and 1 & 3 hourly output
#   6) 2018-03-22       Guang Ping Lou  Take FV3GFS configuration
#                          parameters as input; make it work for 
#                          both FV3GFS and GFS
#   7) 2018-07-18       Guang Ping Lou Generalize this version to other platforms
#   8) 2019-05-27       Bo Cui modify to generate GEFS BUFR sounding files
#   9) 2019-06-05       Xianwu Xue reformatted it and add checked the errors        
################################################################
set -xa
export PS4='+t+$SECONDS exgefs_postsnd.sh.ecf:$LINENO -- '

cd $DATA
########################################
msg="HAS BEGUN"
#postmsg "$jlogfile" "$msg"
########################################

###################################################
## Run meteogram generator for T574
###################################################
export JCAP=${JCAP:-766}
export LEVS=${LEVS:-64}
export LATB=${LATB:-768}
export LONB=${LONB:-1536}
export STARTHOUR=${STARTHOUR:-00}

export ENDHOUR=${ENDHOUR:-180}                 
export NEND1=${NEND1:-180} #$FHMAXHF        ##first period length with time interval = NINT1
export NINT1=$FHOUTHF        ##first period time interval
export NINT3=$FHOUTLF        ##second period time interval

export NZERO=6
export INCREMENT=${INCREMENT:-12}
export OUTFILE=meteomrf
export MAKEBUFR=NO
export F00FLAG=YES

# Extract number of vertical levels from $STARTHOUR atmospheric file
export NEMSIOGET=${NEMSIOGET:-$EXECbufrsnd/nemsio_get}
fhr3=$(printf %03i $STARTHOUR)
ATMFCS=$COMIN/sfcsig/${RUNMEM}.${cycle}.atmf${fhr3}.nemsio
export LEVS=$($NEMSIOGET $ATMFCS dimz | awk '{print $2}')

### Loop for the hour and wait for the sigma and surface flux file:
export FSTART=$STARTHOUR
#
while [ $FSTART -lt $ENDHOUR ]
do
    export FINT=$NINT1
    # Define the end hour for the input
    export FEND=$(expr $FSTART + $INCREMENT) 
    if [ $FEND -lt 100 ]; then FEND=0$FEND; fi 
    if [ $FSTART -eq 00 ]
    then 
        export F00FLAG=YES
    else
        export F00FLAG=NO
    fi
   
    if [ $FEND -eq $ENDHOUR ]
    then
        export MAKEBUFR=YES
    fi

    ic=0
#   while [ $ic -lt 1000 ]
    while [ $ic -lt 100 ]
    do
        if [ ! -f $COMIN/sfcsig/${RUNMEM}.${cycle}.logf$FEND.nemsio ]
        then
            sleep 10
            ic=$(expr $ic + 1)
        else
            break
        fi

        if [ $ic -ge 360 ]
        then
            err_exit "FATAL ERROR: COULD NOT LOCATE logf$FEND file AFTER 1 HOUR"
            err=-5
            exit $err
        fi
    done

    ## 1-hourly output before $NEND1, 3-hourly output after
    if [ $FEND -gt $NEND1 ]; then
        export FINT=$NINT3
    fi
    $USHgefs/gefs_bufr.sh
    err=$?
    export FSTART=$FEND
done

#if [ 'NO' = 'YES' ]
#then
##############################################################
# Tar and gzip the individual bufr files and send them to /com
##############################################################
cd ${COMOUT}/bufr/${mem}
#tar -cf - . | /usr/bin/gzip > ${RUNMEM}.${cycle}.bufrsnd.tar.gz
tar -cf - bufr.* | /usr/bin/gzip > ${RUNMEM}.${cycle}.bufrsnd.tar.gz
cd $DATA

########################################
# Send the single tar file to OSO
########################################
if [ "$SENDDBN" = 'YES' ]
then
    $DBNROOT/bin/dbn_alert MODEL GFS_BUFRSND_TAR $job \
    $COMOUT/bufr/${mem}/${RUNMEM}.${cycle}.bufrsnd.tar.gz
fi

########################################
# Create Regional Collectives of BUFR data and 
# add appropriate WMO Headers.
########################################
collect=' 1 2 3 4 5 6 7 8 9'
if [ $machine == "THEIA" -o  $machine == "JET" ]; then
    for m in ${collect}
    do
        sh $USHgefs/gefs_sndp.sh $m
    done

    ################################################
    # Convert the bufr soundings into GEMPAK files
    ################################################
    sh $USHgefs/gefs_bfr2gpk.sh
    err=$?
else
    rm -rf poe_col
    echo "sh $USHgefs/gefs_bfr2gpk.sh " >> poe_col
    for m in ${collect}
    do
        echo "sh $USHgefs/gefs_sndp.sh $m " >> poe_col
    done

    mv poe_col mpmd_cmdfile

    cat mpmd_cmdfile
    chmod +x mpmd_cmdfile

    ##mpirun -n 10 cfp cmdfile
#   ${APRUN_POSTSNDCFP} cmdfile
    ${APRUN_POSTSNDCFP} 
    err=$?
fi

#fi #if [ "NO" = 'YES' ]

#####################################################################
if [ $err -eq 0 ] ; then
    msg='HAS GERERATED GFS BUFR SOUNDING NORMALLY!'
    #postmsg "$jlogfile" "$msg"
    exit 0
else
    echo "FATAL ERROR: FAILED to Generate GFS BUFR sounding!"
    exit $err
fi

############## END OF SCRIPT #######################

